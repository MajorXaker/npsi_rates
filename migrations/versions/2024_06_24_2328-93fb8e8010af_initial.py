"""initial

Revision ID: 93fb8e8010af
Revises: 
Create Date: 2024-06-24 23:28:27.298941

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "93fb8e8010af"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "config",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("very_important_value", sa.String(), nullable=True),
        sa.Column("step", sa.Integer(), nullable=True),
        sa.Column("data_collection_time", sa.Time(), nullable=True),
        sa.Column(
            "record_created",
            sa.DateTime(),
            server_default=sa.text("statement_timestamp()"),
            nullable=False,
        ),
        sa.Column(
            "record_modified",
            sa.DateTime(),
            server_default=sa.text("statement_timestamp()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_config")),
    )
    op.create_table(
        "currencies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("abbreviation", sa.String(length=5), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("external_id", sa.Integer(), nullable=True),
        sa.Column(
            "record_created",
            sa.DateTime(),
            server_default=sa.text("statement_timestamp()"),
            nullable=False,
        ),
        sa.Column(
            "record_modified",
            sa.DateTime(),
            server_default=sa.text("statement_timestamp()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_currencies")),
    )
    op.create_index(
        op.f("ix_currencies_external_id"), "currencies", ["external_id"], unique=True
    )
    op.create_table(
        "rate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("scale", sa.Integer(), nullable=False),
        sa.Column("official_rate", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("on_date", sa.Date(), nullable=True),
        sa.Column(
            "record_created",
            sa.DateTime(),
            server_default=sa.text("statement_timestamp()"),
            nullable=False,
        ),
        sa.Column(
            "record_modified",
            sa.DateTime(),
            server_default=sa.text("statement_timestamp()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.id"],
            name=op.f("fk_rate_currency_id_currencies"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_rate")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rate")
    op.drop_index(op.f("ix_currencies_external_id"), table_name="currencies")
    op.drop_table("currencies")
    op.drop_table("config")
    # ### end Alembic commands ###
