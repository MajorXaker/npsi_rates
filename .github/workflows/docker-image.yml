name: Bakery Deployment Workflow

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable

  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-buster
    env:
      ENV_FOR_DYNACONF: test
    services:
      postgres:
        # Docker Hub image
        image: postgres:13
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432


    steps:
      - uses: actions/checkout@v3
      - name: pytest
        run: |
          echo "[test]">> .secrets.toml
          echo "\tDATABASE_HOST = 'postgres'">> .secrets.toml
          echo "\tDATABASE_PASSWORD = 'postgres'">> .secrets.toml
          echo "\tPOSTGRES_USER = 'postgres'">> .secrets.toml
          echo "\tPOSTGRES_DB = 'test_bakery'">> .secrets.toml
          cat .secrets.toml
          pip install pipenv
          pipenv install --deploy --system --dev
          python -m tests.setup_test_db
          coverage run -m pytest
          coverage report -m --skip-covered

  build-and-push-dev-image:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        app: [ 'core', 'api', 'worker' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${GITHUB_REPOSITORY}/${{ matrix.app }}:${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile.${{ matrix.app }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
